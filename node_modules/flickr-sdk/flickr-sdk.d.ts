import type { Request } from './lib/request';
import type { Response } from 'superagent';


declare class Flickr {
	static OAuth: any;
	static Feeds: any;
	static Upload: any;
	static Replace: any;

	constructor(auth: string | ((req: Request) => void));
	activity: {
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.activity.userComments.html) - Permissions: `read` */
		userComments(params: {
			per_page?: string | number;
			page?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.activity.userPhotos.html) - Permissions: `read` */
		userPhotos(params: {
			timeframe?: string | number;
			per_page?: string | number;
			page?: string | number;
		}): Promise<Response>;
	};
	auth: {
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.auth.checkToken.html) - Permissions: `none` */
		checkToken(params: {
			auth_token: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.auth.getFrob.html) - Permissions: `none` */
		getFrob(params: {
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.auth.getFullToken.html) - Permissions: `none` */
		getFullToken(params: {
			mini_token: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.auth.getToken.html) - Permissions: `none` */
		getToken(params: {
			frob: string | number;
		}): Promise<Response>;
		oauth: {
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.auth.oauth.checkToken.html) - Permissions: `none` */
			checkToken(params: {
				oauth_token: string | number;
			}): Promise<Response>;
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.auth.oauth.getAccessToken.html) - Permissions: `none` */
			getAccessToken(params: {
			}): Promise<Response>;
		};
	};
	blogs: {
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.blogs.getList.html) - Permissions: `read` */
		getList(params: {
			service?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.blogs.getServices.html) - Permissions: `none` */
		getServices(params: {
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.blogs.postPhoto.html) - Permissions: `write` */
		postPhoto(params: {
			blog_id?: string | number;
			photo_id: string | number;
			title: string | number;
			description: string | number;
			blog_password?: string | number;
			service?: string | number;
		}): Promise<Response>;
	};
	cameras: {
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.cameras.getBrandModels.html) - Permissions: `none` */
		getBrandModels(params: {
			brand: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.cameras.getBrands.html) - Permissions: `none` */
		getBrands(params: {
		}): Promise<Response>;
	};
	collections: {
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.collections.getInfo.html) - Permissions: `read` */
		getInfo(params: {
			collection_id: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.collections.getTree.html) - Permissions: `none` */
		getTree(params: {
			collection_id?: string | number;
			user_id?: string | number;
		}): Promise<Response>;
	};
	commons: {
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.commons.getInstitutions.html) - Permissions: `none` */
		getInstitutions(params: {
		}): Promise<Response>;
	};
	contacts: {
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.contacts.getList.html) - Permissions: `read` */
		getList(params: {
			filter?: string | number;
			page?: string | number;
			per_page?: string | number;
			sort?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.contacts.getListRecentlyUploaded.html) - Permissions: `read` */
		getListRecentlyUploaded(params: {
			date_lastupload?: string | number;
			filter?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.contacts.getPublicList.html) - Permissions: `none` */
		getPublicList(params: {
			user_id: string | number;
			page?: string | number;
			per_page?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.contacts.getTaggingSuggestions.html) - Permissions: `read` */
		getTaggingSuggestions(params: {
			per_page?: string | number;
			page?: string | number;
		}): Promise<Response>;
	};
	favorites: {
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.favorites.add.html) - Permissions: `write` */
		add(params: {
			photo_id: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.favorites.getContext.html) - Permissions: `none` */
		getContext(params: {
			photo_id: string | number;
			user_id: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.favorites.getList.html) - Permissions: `none` */
		getList(params: {
			user_id?: string | number;
			min_fave_date?: string | number;
			max_fave_date?: string | number;
			extras?: string | number;
			per_page?: string | number;
			page?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.favorites.getPublicList.html) - Permissions: `none` */
		getPublicList(params: {
			user_id: string | number;
			min_fave_date?: string | number;
			max_fave_date?: string | number;
			extras?: string | number;
			per_page?: string | number;
			page?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.favorites.remove.html) - Permissions: `write` */
		remove(params: {
			photo_id: string | number;
		}): Promise<Response>;
	};
	galleries: {
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.galleries.addPhoto.html) - Permissions: `write` */
		addPhoto(params: {
			gallery_id: string | number;
			photo_id: string | number;
			comment?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.galleries.create.html) - Permissions: `write` */
		create(params: {
			title: string | number;
			description: string | number;
			primary_photo_id?: string | number;
			full_result?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.galleries.editMeta.html) - Permissions: `write` */
		editMeta(params: {
			gallery_id: string | number;
			title: string | number;
			description?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.galleries.editPhoto.html) - Permissions: `write` */
		editPhoto(params: {
			gallery_id: string | number;
			photo_id: string | number;
			comment: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.galleries.editPhotos.html) - Permissions: `write` */
		editPhotos(params: {
			gallery_id: string | number;
			primary_photo_id: string | number;
			photo_ids: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.galleries.getInfo.html) - Permissions: `none` */
		getInfo(params: {
			gallery_id: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.galleries.getList.html) - Permissions: `none` */
		getList(params: {
			user_id: string | number;
			per_page?: string | number;
			page?: string | number;
			primary_photo_extras?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.galleries.getListForPhoto.html) - Permissions: `none` */
		getListForPhoto(params: {
			photo_id: string | number;
			per_page?: string | number;
			page?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.galleries.getPhotos.html) - Permissions: `none` */
		getPhotos(params: {
			gallery_id: string | number;
			extras?: string | number;
			per_page?: string | number;
			page?: string | number;
		}): Promise<Response>;
	};
	groups: {
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.groups.browse.html) - Permissions: `read` */
		browse(params: {
			cat_id?: string | number;
		}): Promise<Response>;
		discuss: {
			replies: {
				/** [Flickr docs](https://www.flickr.com/services/api/flickr.groups.discuss.replies.add.html) - Permissions: `write` */
				add(params: {
					group_id: string | number;
					topic_id: string | number;
					message: string | number;
				}): Promise<Response>;
				/** [Flickr docs](https://www.flickr.com/services/api/flickr.groups.discuss.replies.delete.html) - Permissions: `delete` */
				delete(params: {
					group_id: string | number;
					topic_id: string | number;
					reply_id: string | number;
				}): Promise<Response>;
				/** [Flickr docs](https://www.flickr.com/services/api/flickr.groups.discuss.replies.edit.html) - Permissions: `write` */
				edit(params: {
					group_id: string | number;
					topic_id: string | number;
					reply_id: string | number;
					message: string | number;
				}): Promise<Response>;
				/** [Flickr docs](https://www.flickr.com/services/api/flickr.groups.discuss.replies.getInfo.html) - Permissions: `none` */
				getInfo(params: {
					group_id: string | number;
					topic_id: string | number;
					reply_id: string | number;
				}): Promise<Response>;
				/** [Flickr docs](https://www.flickr.com/services/api/flickr.groups.discuss.replies.getList.html) - Permissions: `none` */
				getList(params: {
					group_id: string | number;
					topic_id: string | number;
					per_page: string | number;
					page?: string | number;
				}): Promise<Response>;
			};
			topics: {
				/** [Flickr docs](https://www.flickr.com/services/api/flickr.groups.discuss.topics.add.html) - Permissions: `write` */
				add(params: {
					group_id: string | number;
					subject: string | number;
					message: string | number;
				}): Promise<Response>;
				/** [Flickr docs](https://www.flickr.com/services/api/flickr.groups.discuss.topics.getInfo.html) - Permissions: `none` */
				getInfo(params: {
					group_id: string | number;
					topic_id: string | number;
				}): Promise<Response>;
				/** [Flickr docs](https://www.flickr.com/services/api/flickr.groups.discuss.topics.getList.html) - Permissions: `none` */
				getList(params: {
					group_id: string | number;
					per_page?: string | number;
					page?: string | number;
				}): Promise<Response>;
			};
		};
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.groups.getInfo.html) - Permissions: `none` */
		getInfo(params: {
			group_id: string | number;
			group_path_alias?: string | number;
			lang?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.groups.join.html) - Permissions: `write` */
		join(params: {
			group_id: string | number;
			accept_rules?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.groups.joinRequest.html) - Permissions: `write` */
		joinRequest(params: {
			group_id: string | number;
			message: string | number;
			accept_rules: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.groups.leave.html) - Permissions: `delete` */
		leave(params: {
			group_id: string | number;
			delete_photos?: string | number;
		}): Promise<Response>;
		members: {
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.groups.members.getList.html) - Permissions: `read` */
			getList(params: {
				group_id: string | number;
				membertypes?: string | number;
				per_page?: string | number;
				page?: string | number;
			}): Promise<Response>;
		};
		pools: {
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.groups.pools.add.html) - Permissions: `write` */
			add(params: {
				photo_id: string | number;
				group_id: string | number;
			}): Promise<Response>;
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.groups.pools.getContext.html) - Permissions: `none` */
			getContext(params: {
				photo_id: string | number;
				group_id: string | number;
			}): Promise<Response>;
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.groups.pools.getGroups.html) - Permissions: `read` */
			getGroups(params: {
				page?: string | number;
				per_page?: string | number;
			}): Promise<Response>;
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.groups.pools.getPhotos.html) - Permissions: `none` */
			getPhotos(params: {
				group_id: string | number;
				tags?: string | number;
				user_id?: string | number;
				extras?: string | number;
				per_page?: string | number;
				page?: string | number;
			}): Promise<Response>;
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.groups.pools.remove.html) - Permissions: `write` */
			remove(params: {
				photo_id: string | number;
				group_id: string | number;
			}): Promise<Response>;
		};
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.groups.search.html) - Permissions: `none` */
		search(params: {
			text: string | number;
			per_page?: string | number;
			page?: string | number;
		}): Promise<Response>;
	};
	interestingness: {
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.interestingness.getList.html) - Permissions: `none` */
		getList(params: {
			date?: string | number;
			extras?: string | number;
			per_page?: string | number;
			page?: string | number;
		}): Promise<Response>;
	};
	machinetags: {
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.machinetags.getNamespaces.html) - Permissions: `none` */
		getNamespaces(params: {
			predicate?: string | number;
			per_page?: string | number;
			page?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.machinetags.getPairs.html) - Permissions: `none` */
		getPairs(params: {
			namespace?: string | number;
			predicate?: string | number;
			per_page?: string | number;
			page?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.machinetags.getPredicates.html) - Permissions: `none` */
		getPredicates(params: {
			namespace?: string | number;
			per_page?: string | number;
			page?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.machinetags.getRecentValues.html) - Permissions: `none` */
		getRecentValues(params: {
			namespace?: string | number;
			predicate?: string | number;
			added_since?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.machinetags.getValues.html) - Permissions: `none` */
		getValues(params: {
			namespace: string | number;
			predicate: string | number;
			per_page?: string | number;
			page?: string | number;
		}): Promise<Response>;
	};
	panda: {
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.panda.getList.html) - Permissions: `none` */
		getList(params: {
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.panda.getPhotos.html) - Permissions: `none` */
		getPhotos(params: {
			panda_name: string | number;
			extras?: string | number;
			per_page?: string | number;
			page?: string | number;
		}): Promise<Response>;
	};
	people: {
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.people.findByEmail.html) - Permissions: `none` */
		findByEmail(params: {
			find_email: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.people.findByUsername.html) - Permissions: `none` */
		findByUsername(params: {
			username: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.people.getGroups.html) - Permissions: `read` */
		getGroups(params: {
			user_id: string | number;
			extras?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.people.getInfo.html) - Permissions: `none` */
		getInfo(params: {
			user_id: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.people.getLimits.html) - Permissions: `read` */
		getLimits(params: {
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.people.getPhotos.html) - Permissions: `none` */
		getPhotos(params: {
			user_id: string | number;
			safe_search?: string | number;
			min_upload_date?: string | number;
			max_upload_date?: string | number;
			min_taken_date?: string | number;
			max_taken_date?: string | number;
			content_type?: string | number;
			privacy_filter?: string | number;
			extras?: string | number;
			per_page?: string | number;
			page?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.people.getPhotosOf.html) - Permissions: `none` */
		getPhotosOf(params: {
			user_id: string | number;
			owner_id?: string | number;
			extras?: string | number;
			per_page?: string | number;
			page?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.people.getPublicGroups.html) - Permissions: `none` */
		getPublicGroups(params: {
			user_id: string | number;
			invitation_only?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.people.getPublicPhotos.html) - Permissions: `none` */
		getPublicPhotos(params: {
			user_id: string | number;
			safe_search?: string | number;
			extras?: string | number;
			per_page?: string | number;
			page?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.people.getUploadStatus.html) - Permissions: `read` */
		getUploadStatus(params: {
		}): Promise<Response>;
	};
	photos: {
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.addTags.html) - Permissions: `write` */
		addTags(params: {
			photo_id: string | number;
			tags: string | number;
		}): Promise<Response>;
		comments: {
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.comments.addComment.html) - Permissions: `write` */
			addComment(params: {
				photo_id: string | number;
				comment_text: string | number;
			}): Promise<Response>;
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.comments.deleteComment.html) - Permissions: `write` */
			deleteComment(params: {
				comment_id: string | number;
			}): Promise<Response>;
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.comments.editComment.html) - Permissions: `write` */
			editComment(params: {
				comment_id: string | number;
				comment_text: string | number;
			}): Promise<Response>;
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.comments.getList.html) - Permissions: `none` */
			getList(params: {
				photo_id: string | number;
				min_comment_date?: string | number;
				max_comment_date?: string | number;
			}): Promise<Response>;
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.comments.getRecentForContacts.html) - Permissions: `read` */
			getRecentForContacts(params: {
				date_lastcomment?: string | number;
				contacts_filter?: string | number;
				extras?: string | number;
				per_page?: string | number;
				page?: string | number;
			}): Promise<Response>;
		};
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.delete.html) - Permissions: `delete` */
		delete(params: {
			photo_id: string | number;
		}): Promise<Response>;
		geo: {
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.geo.batchCorrectLocation.html) - Permissions: `write` */
			batchCorrectLocation(params: {
				lat: string | number;
				lon: string | number;
				accuracy: string | number;
				place_id?: string | number;
				woe_id?: string | number;
			}): Promise<Response>;
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.geo.correctLocation.html) - Permissions: `write` */
			correctLocation(params: {
				photo_id: string | number;
				place_id?: string | number;
				woe_id?: string | number;
				foursquare_id: string | number;
			}): Promise<Response>;
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.geo.getLocation.html) - Permissions: `none` */
			getLocation(params: {
				photo_id: string | number;
				extras?: string | number;
			}): Promise<Response>;
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.geo.getPerms.html) - Permissions: `read` */
			getPerms(params: {
				photo_id: string | number;
			}): Promise<Response>;
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.geo.photosForLocation.html) - Permissions: `read` */
			photosForLocation(params: {
				lat: string | number;
				lon: string | number;
				accuracy?: string | number;
				extras?: string | number;
				per_page?: string | number;
				page?: string | number;
			}): Promise<Response>;
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.geo.removeLocation.html) - Permissions: `write` */
			removeLocation(params: {
				photo_id: string | number;
			}): Promise<Response>;
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.geo.setContext.html) - Permissions: `write` */
			setContext(params: {
				photo_id: string | number;
				context: string | number;
			}): Promise<Response>;
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.geo.setLocation.html) - Permissions: `write` */
			setLocation(params: {
				photo_id: string | number;
				lat: string | number;
				lon: string | number;
				accuracy?: string | number;
				context?: string | number;
			}): Promise<Response>;
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.geo.setPerms.html) - Permissions: `write` */
			setPerms(params: {
				is_public: string | number;
				is_contact: string | number;
				is_friend: string | number;
				is_family: string | number;
				photo_id: string | number;
			}): Promise<Response>;
		};
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.getAllContexts.html) - Permissions: `none` */
		getAllContexts(params: {
			photo_id: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.getContactsPhotos.html) - Permissions: `read` */
		getContactsPhotos(params: {
			count?: string | number;
			just_friends?: string | number;
			single_photo?: string | number;
			include_self?: string | number;
			extras?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.getContactsPublicPhotos.html) - Permissions: `none` */
		getContactsPublicPhotos(params: {
			user_id: string | number;
			count?: string | number;
			just_friends?: string | number;
			single_photo?: string | number;
			include_self?: string | number;
			extras?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.getContext.html) - Permissions: `none` */
		getContext(params: {
			photo_id: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.getCounts.html) - Permissions: `read` */
		getCounts(params: {
			dates?: string | number;
			taken_dates?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.getExif.html) - Permissions: `none` */
		getExif(params: {
			photo_id: string | number;
			secret?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.getFavorites.html) - Permissions: `none` */
		getFavorites(params: {
			photo_id: string | number;
			page?: string | number;
			per_page?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.getInfo.html) - Permissions: `none` */
		getInfo(params: {
			photo_id: string | number;
			secret?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.getNotInSet.html) - Permissions: `read` */
		getNotInSet(params: {
			max_upload_date?: string | number;
			min_taken_date?: string | number;
			max_taken_date?: string | number;
			privacy_filter?: string | number;
			media?: string | number;
			min_upload_date?: string | number;
			extras?: string | number;
			per_page?: string | number;
			page?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.getPerms.html) - Permissions: `read` */
		getPerms(params: {
			photo_id: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.getPopular.html) - Permissions: `none` */
		getPopular(params: {
			user_id?: string | number;
			sort?: string | number;
			extras?: string | number;
			per_page?: string | number;
			page?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.getRecent.html) - Permissions: `none` */
		getRecent(params: {
			extras?: string | number;
			per_page?: string | number;
			page?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.getSizes.html) - Permissions: `none` */
		getSizes(params: {
			photo_id: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.getUntagged.html) - Permissions: `read` */
		getUntagged(params: {
			min_upload_date?: string | number;
			max_upload_date?: string | number;
			min_taken_date?: string | number;
			max_taken_date?: string | number;
			privacy_filter?: string | number;
			media?: string | number;
			extras?: string | number;
			per_page?: string | number;
			page?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.getWithGeoData.html) - Permissions: `read` */
		getWithGeoData(params: {
			min_upload_date?: string | number;
			max_upload_date?: string | number;
			min_taken_date?: string | number;
			max_taken_date?: string | number;
			privacy_filter?: string | number;
			sort?: string | number;
			media?: string | number;
			extras?: string | number;
			per_page?: string | number;
			page?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.getWithoutGeoData.html) - Permissions: `read` */
		getWithoutGeoData(params: {
			max_upload_date?: string | number;
			min_taken_date?: string | number;
			max_taken_date?: string | number;
			privacy_filter?: string | number;
			sort?: string | number;
			media?: string | number;
			min_upload_date?: string | number;
			extras?: string | number;
			per_page?: string | number;
			page?: string | number;
		}): Promise<Response>;
		licenses: {
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.licenses.getInfo.html) - Permissions: `none` */
			getInfo(params: {
			}): Promise<Response>;
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.licenses.setLicense.html) - Permissions: `write` */
			setLicense(params: {
				photo_id: string | number;
				license_id: string | number;
			}): Promise<Response>;
		};
		notes: {
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.notes.add.html) - Permissions: `write` */
			add(params: {
				photo_id: string | number;
				note_x: string | number;
				note_y: string | number;
				note_w: string | number;
				note_h: string | number;
				note_text: string | number;
			}): Promise<Response>;
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.notes.delete.html) - Permissions: `write` */
			delete(params: {
				note_id: string | number;
			}): Promise<Response>;
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.notes.edit.html) - Permissions: `write` */
			edit(params: {
				note_id: string | number;
				note_x: string | number;
				note_y: string | number;
				note_w: string | number;
				note_h: string | number;
				note_text: string | number;
			}): Promise<Response>;
		};
		people: {
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.people.add.html) - Permissions: `write` */
			add(params: {
				photo_id: string | number;
				user_id: string | number;
				person_x?: string | number;
				person_y?: string | number;
				person_w?: string | number;
				person_h?: string | number;
			}): Promise<Response>;
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.people.delete.html) - Permissions: `write` */
			delete(params: {
				photo_id: string | number;
				user_id: string | number;
			}): Promise<Response>;
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.people.deleteCoords.html) - Permissions: `write` */
			deleteCoords(params: {
				photo_id: string | number;
				user_id: string | number;
			}): Promise<Response>;
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.people.editCoords.html) - Permissions: `write` */
			editCoords(params: {
				photo_id: string | number;
				user_id: string | number;
				person_x: string | number;
				person_y: string | number;
				person_w: string | number;
				person_h: string | number;
			}): Promise<Response>;
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.people.getList.html) - Permissions: `none` */
			getList(params: {
				photo_id: string | number;
			}): Promise<Response>;
		};
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.recentlyUpdated.html) - Permissions: `read` */
		recentlyUpdated(params: {
			min_date: string | number;
			extras?: string | number;
			per_page?: string | number;
			page?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.removeTag.html) - Permissions: `write` */
		removeTag(params: {
			tag_id: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.search.html) - Permissions: `none` */
		search(params: {
			user_id?: string | number;
			tags?: string | number;
			tag_mode?: string | number;
			text?: string | number;
			min_upload_date?: string | number;
			max_upload_date?: string | number;
			min_taken_date?: string | number;
			max_taken_date?: string | number;
			license?: string | number;
			sort?: string | number;
			privacy_filter?: string | number;
			bbox?: string | number;
			accuracy?: string | number;
			safe_search?: string | number;
			content_type?: string | number;
			machine_tags?: string | number;
			machine_tag_mode?: string | number;
			group_id?: string | number;
			contacts?: string | number;
			woe_id?: string | number;
			place_id?: string | number;
			media?: string | number;
			has_geo?: string | number;
			geo_context?: string | number;
			lat?: string | number;
			lon?: string | number;
			radius?: string | number;
			radius_units?: string | number;
			is_commons?: string | number;
			in_gallery?: string | number;
			is_getty?: string | number;
			extras?: string | number;
			per_page?: string | number;
			page?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.setContentType.html) - Permissions: `write` */
		setContentType(params: {
			photo_id: string | number;
			content_type: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.setDates.html) - Permissions: `write` */
		setDates(params: {
			photo_id: string | number;
			date_posted?: string | number;
			date_taken?: string | number;
			date_taken_granularity?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.setMeta.html) - Permissions: `write` */
		setMeta(params: {
			photo_id: string | number;
			title?: string | number;
			description?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.setPerms.html) - Permissions: `write` */
		setPerms(params: {
			photo_id: string | number;
			is_public: string | number;
			is_friend: string | number;
			is_family: string | number;
			perm_comment?: string | number;
			perm_addmeta?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.setSafetyLevel.html) - Permissions: `write` */
		setSafetyLevel(params: {
			photo_id: string | number;
			safety_level?: string | number;
			hidden?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.setTags.html) - Permissions: `write` */
		setTags(params: {
			photo_id: string | number;
			tags: string | number;
		}): Promise<Response>;
		suggestions: {
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.suggestions.approveSuggestion.html) - Permissions: `write` */
			approveSuggestion(params: {
				suggestion_id: string | number;
			}): Promise<Response>;
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.suggestions.getList.html) - Permissions: `read` */
			getList(params: {
				photo_id?: string | number;
				status_id?: string | number;
			}): Promise<Response>;
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.suggestions.rejectSuggestion.html) - Permissions: `write` */
			rejectSuggestion(params: {
				suggestion_id: string | number;
			}): Promise<Response>;
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.suggestions.removeSuggestion.html) - Permissions: `write` */
			removeSuggestion(params: {
				suggestion_id: string | number;
			}): Promise<Response>;
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.suggestions.suggestLocation.html) - Permissions: `write` */
			suggestLocation(params: {
				photo_id: string | number;
				lat: string | number;
				lon: string | number;
				accuracy?: string | number;
				woe_id?: string | number;
				place_id?: string | number;
				note?: string | number;
			}): Promise<Response>;
		};
		transform: {
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.transform.rotate.html) - Permissions: `write` */
			rotate(params: {
				photo_id: string | number;
				degrees: string | number;
			}): Promise<Response>;
		};
		upload: {
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.photos.upload.checkTickets.html) - Permissions: `none` */
			checkTickets(params: {
				tickets: string | number;
			}): Promise<Response>;
		};
	};
	photosets: {
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photosets.addPhoto.html) - Permissions: `write` */
		addPhoto(params: {
			photoset_id: string | number;
			photo_id: string | number;
		}): Promise<Response>;
		comments: {
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.photosets.comments.addComment.html) - Permissions: `write` */
			addComment(params: {
				photoset_id: string | number;
				comment_text: string | number;
			}): Promise<Response>;
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.photosets.comments.deleteComment.html) - Permissions: `write` */
			deleteComment(params: {
				comment_id: string | number;
			}): Promise<Response>;
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.photosets.comments.editComment.html) - Permissions: `write` */
			editComment(params: {
				comment_id: string | number;
				comment_text: string | number;
			}): Promise<Response>;
			/** [Flickr docs](https://www.flickr.com/services/api/flickr.photosets.comments.getList.html) - Permissions: `none` */
			getList(params: {
				photoset_id: string | number;
			}): Promise<Response>;
		};
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photosets.create.html) - Permissions: `write` */
		create(params: {
			title: string | number;
			description?: string | number;
			primary_photo_id: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photosets.delete.html) - Permissions: `write` */
		delete(params: {
			photoset_id: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photosets.editMeta.html) - Permissions: `write` */
		editMeta(params: {
			photoset_id: string | number;
			title: string | number;
			description?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photosets.editPhotos.html) - Permissions: `write` */
		editPhotos(params: {
			photoset_id: string | number;
			primary_photo_id: string | number;
			photo_ids: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photosets.getContext.html) - Permissions: `none` */
		getContext(params: {
			photo_id: string | number;
			photoset_id: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photosets.getInfo.html) - Permissions: `none` */
		getInfo(params: {
			photoset_id: string | number;
			user_id: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photosets.getList.html) - Permissions: `none` */
		getList(params: {
			user_id?: string | number;
			page?: string | number;
			per_page?: string | number;
			primary_photo_extras?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photosets.getPhotos.html) - Permissions: `none` */
		getPhotos(params: {
			photoset_id: string | number;
			user_id: string | number;
			extras?: string | number;
			per_page?: string | number;
			page?: string | number;
			privacy_filter?: string | number;
			media?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photosets.orderSets.html) - Permissions: `write` */
		orderSets(params: {
			photoset_ids: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photosets.removePhoto.html) - Permissions: `write` */
		removePhoto(params: {
			photoset_id: string | number;
			photo_id: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photosets.removePhotos.html) - Permissions: `write` */
		removePhotos(params: {
			photoset_id: string | number;
			photo_ids: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photosets.reorderPhotos.html) - Permissions: `write` */
		reorderPhotos(params: {
			photoset_id: string | number;
			photo_ids: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.photosets.setPrimaryPhoto.html) - Permissions: `write` */
		setPrimaryPhoto(params: {
			photoset_id: string | number;
			photo_id: string | number;
		}): Promise<Response>;
	};
	places: {
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.places.find.html) - Permissions: `none` */
		find(params: {
			query: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.places.findByLatLon.html) - Permissions: `none` */
		findByLatLon(params: {
			lat: string | number;
			lon: string | number;
			accuracy?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.places.getChildrenWithPhotosPublic.html) - Permissions: `none` */
		getChildrenWithPhotosPublic(params: {
			place_id?: string | number;
			woe_id?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.places.getInfo.html) - Permissions: `none` */
		getInfo(params: {
			place_id?: string | number;
			woe_id?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.places.getInfoByUrl.html) - Permissions: `none` */
		getInfoByUrl(params: {
			url: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.places.getPlaceTypes.html) - Permissions: `none` */
		getPlaceTypes(params: {
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.places.getShapeHistory.html) - Permissions: `none` */
		getShapeHistory(params: {
			place_id?: string | number;
			woe_id?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.places.getTopPlacesList.html) - Permissions: `none` */
		getTopPlacesList(params: {
			place_type_id: string | number;
			date?: string | number;
			woe_id?: string | number;
			place_id?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.places.placesForBoundingBox.html) - Permissions: `none` */
		placesForBoundingBox(params: {
			bbox: string | number;
			place_type?: string | number;
			place_type_id?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.places.placesForContacts.html) - Permissions: `read` */
		placesForContacts(params: {
			place_type?: string | number;
			place_type_id?: string | number;
			woe_id?: string | number;
			place_id?: string | number;
			threshold?: string | number;
			contacts?: string | number;
			min_upload_date?: string | number;
			max_upload_date?: string | number;
			min_taken_date?: string | number;
			max_taken_date?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.places.placesForTags.html) - Permissions: `none` */
		placesForTags(params: {
			place_type_id: string | number;
			woe_id?: string | number;
			place_id?: string | number;
			threshold?: string | number;
			tags?: string | number;
			tag_mode?: string | number;
			machine_tags?: string | number;
			machine_tag_mode?: string | number;
			min_upload_date?: string | number;
			max_upload_date?: string | number;
			min_taken_date?: string | number;
			max_taken_date?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.places.placesForUser.html) - Permissions: `read` */
		placesForUser(params: {
			place_type_id?: string | number;
			place_type?: string | number;
			woe_id?: string | number;
			place_id?: string | number;
			threshold?: string | number;
			min_upload_date?: string | number;
			max_upload_date?: string | number;
			min_taken_date?: string | number;
			max_taken_date?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.places.resolvePlaceId.html) - Permissions: `none` */
		resolvePlaceId(params: {
			place_id: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.places.resolvePlaceURL.html) - Permissions: `none` */
		resolvePlaceURL(params: {
			url: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.places.tagsForPlace.html) - Permissions: `none` */
		tagsForPlace(params: {
			woe_id?: string | number;
			place_id?: string | number;
			min_upload_date?: string | number;
			max_upload_date?: string | number;
			min_taken_date?: string | number;
			max_taken_date?: string | number;
		}): Promise<Response>;
	};
	prefs: {
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.prefs.getContentType.html) - Permissions: `read` */
		getContentType(params: {
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.prefs.getGeoPerms.html) - Permissions: `read` */
		getGeoPerms(params: {
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.prefs.getHidden.html) - Permissions: `read` */
		getHidden(params: {
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.prefs.getPrivacy.html) - Permissions: `read` */
		getPrivacy(params: {
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.prefs.getSafetyLevel.html) - Permissions: `read` */
		getSafetyLevel(params: {
		}): Promise<Response>;
	};
	profile: {
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.profile.getProfile.html) - Permissions: `none` */
		getProfile(params: {
			user_id: string | number;
		}): Promise<Response>;
	};
	push: {
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.push.getSubscriptions.html) - Permissions: `read` */
		getSubscriptions(params: {
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.push.getTopics.html) - Permissions: `none` */
		getTopics(params: {
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.push.subscribe.html) - Permissions: `read` */
		subscribe(params: {
			topic: string | number;
			callback: string | number;
			verify: string | number;
			verify_token?: string | number;
			lease_seconds?: string | number;
			woe_ids?: string | number;
			place_ids?: string | number;
			lat?: string | number;
			lon?: string | number;
			radius?: string | number;
			radius_units?: string | number;
			accuracy?: string | number;
			nsids?: string | number;
			tags?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.push.unsubscribe.html) - Permissions: `read` */
		unsubscribe(params: {
			topic: string | number;
			callback: string | number;
			verify: string | number;
			verify_token?: string | number;
		}): Promise<Response>;
	};
	reflection: {
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.reflection.getMethodInfo.html) - Permissions: `none` */
		getMethodInfo(params: {
			method_name: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.reflection.getMethods.html) - Permissions: `none` */
		getMethods(params: {
		}): Promise<Response>;
	};
	stats: {
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.stats.getCSVFiles.html) - Permissions: `read` */
		getCSVFiles(params: {
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.stats.getCollectionDomains.html) - Permissions: `read` */
		getCollectionDomains(params: {
			date: string | number;
			collection_id?: string | number;
			per_page?: string | number;
			page?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.stats.getCollectionReferrers.html) - Permissions: `read` */
		getCollectionReferrers(params: {
			date: string | number;
			domain: string | number;
			collection_id?: string | number;
			per_page?: string | number;
			page?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.stats.getCollectionStats.html) - Permissions: `read` */
		getCollectionStats(params: {
			date: string | number;
			collection_id: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.stats.getPhotoDomains.html) - Permissions: `read` */
		getPhotoDomains(params: {
			date: string | number;
			photo_id?: string | number;
			per_page?: string | number;
			page?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.stats.getPhotoReferrers.html) - Permissions: `read` */
		getPhotoReferrers(params: {
			date: string | number;
			domain: string | number;
			photo_id?: string | number;
			per_page?: string | number;
			page?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.stats.getPhotoStats.html) - Permissions: `read` */
		getPhotoStats(params: {
			date: string | number;
			photo_id: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.stats.getPhotosetDomains.html) - Permissions: `read` */
		getPhotosetDomains(params: {
			date: string | number;
			photoset_id?: string | number;
			per_page?: string | number;
			page?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.stats.getPhotosetReferrers.html) - Permissions: `read` */
		getPhotosetReferrers(params: {
			date: string | number;
			domain: string | number;
			photoset_id?: string | number;
			per_page?: string | number;
			page?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.stats.getPhotosetStats.html) - Permissions: `read` */
		getPhotosetStats(params: {
			date: string | number;
			photoset_id: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.stats.getPhotostreamDomains.html) - Permissions: `read` */
		getPhotostreamDomains(params: {
			date: string | number;
			per_page?: string | number;
			page?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.stats.getPhotostreamReferrers.html) - Permissions: `read` */
		getPhotostreamReferrers(params: {
			date: string | number;
			domain: string | number;
			per_page?: string | number;
			page?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.stats.getPhotostreamStats.html) - Permissions: `read` */
		getPhotostreamStats(params: {
			date: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.stats.getPopularPhotos.html) - Permissions: `read` */
		getPopularPhotos(params: {
			date?: string | number;
			sort?: string | number;
			per_page?: string | number;
			page?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.stats.getTotalViews.html) - Permissions: `read` */
		getTotalViews(params: {
			date?: string | number;
		}): Promise<Response>;
	};
	tags: {
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.tags.getClusterPhotos.html) - Permissions: `none` */
		getClusterPhotos(params: {
			tag: string | number;
			cluster_id: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.tags.getClusters.html) - Permissions: `none` */
		getClusters(params: {
			tag: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.tags.getHotList.html) - Permissions: `none` */
		getHotList(params: {
			period?: string | number;
			count?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.tags.getListPhoto.html) - Permissions: `none` */
		getListPhoto(params: {
			photo_id: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.tags.getListUser.html) - Permissions: `none` */
		getListUser(params: {
			user_id?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.tags.getListUserPopular.html) - Permissions: `none` */
		getListUserPopular(params: {
			user_id?: string | number;
			count?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.tags.getListUserRaw.html) - Permissions: `none` */
		getListUserRaw(params: {
			tag?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.tags.getMostFrequentlyUsed.html) - Permissions: `read` */
		getMostFrequentlyUsed(params: {
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.tags.getRelated.html) - Permissions: `none` */
		getRelated(params: {
			tag: string | number;
		}): Promise<Response>;
	};
	test: {
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.test.echo.html) - Permissions: `none` */
		echo(params: {
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.test.login.html) - Permissions: `read` */
		login(params: {
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.test.null.html) - Permissions: `read` */
		null(params: {
		}): Promise<Response>;
	};
	testimonials: {
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.testimonials.addTestimonial.html) - Permissions: `write` */
		addTestimonial(params: {
			user_id: string | number;
			testimonial_text: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.testimonials.approveTestimonial.html) - Permissions: `write` */
		approveTestimonial(params: {
			testimonial_id: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.testimonials.deleteTestimonial.html) - Permissions: `write` */
		deleteTestimonial(params: {
			testimonial_id: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.testimonials.editTestimonial.html) - Permissions: `write` */
		editTestimonial(params: {
			user_id: string | number;
			testimonial_id: string | number;
			testimonial_text: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.testimonials.getAllTestimonialsAbout.html) - Permissions: `read` */
		getAllTestimonialsAbout(params: {
			page?: string | number;
			per_page?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.testimonials.getAllTestimonialsAboutBy.html) - Permissions: `read` */
		getAllTestimonialsAboutBy(params: {
			user_id: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.testimonials.getAllTestimonialsBy.html) - Permissions: `read` */
		getAllTestimonialsBy(params: {
			page?: string | number;
			per_page?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.testimonials.getPendingTestimonialsAbout.html) - Permissions: `read` */
		getPendingTestimonialsAbout(params: {
			page?: string | number;
			per_page?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.testimonials.getPendingTestimonialsAboutBy.html) - Permissions: `read` */
		getPendingTestimonialsAboutBy(params: {
			user_id: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.testimonials.getPendingTestimonialsBy.html) - Permissions: `read` */
		getPendingTestimonialsBy(params: {
			page?: string | number;
			per_page?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.testimonials.getTestimonialsAbout.html) - Permissions: `none` */
		getTestimonialsAbout(params: {
			user_id: string | number;
			page?: string | number;
			per_page?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.testimonials.getTestimonialsAboutBy.html) - Permissions: `read` */
		getTestimonialsAboutBy(params: {
			user_id: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.testimonials.getTestimonialsBy.html) - Permissions: `none` */
		getTestimonialsBy(params: {
			user_id: string | number;
			page?: string | number;
			per_page?: string | number;
		}): Promise<Response>;
	};
	urls: {
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.urls.getGroup.html) - Permissions: `none` */
		getGroup(params: {
			group_id: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.urls.getUserPhotos.html) - Permissions: `none` */
		getUserPhotos(params: {
			user_id?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.urls.getUserProfile.html) - Permissions: `none` */
		getUserProfile(params: {
			user_id?: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.urls.lookupGallery.html) - Permissions: `none` */
		lookupGallery(params: {
			url: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.urls.lookupGroup.html) - Permissions: `none` */
		lookupGroup(params: {
			url: string | number;
		}): Promise<Response>;
		/** [Flickr docs](https://www.flickr.com/services/api/flickr.urls.lookupUser.html) - Permissions: `none` */
		lookupUser(params: {
			url: string | number;
		}): Promise<Response>;
	};
}

export = Flickr;
